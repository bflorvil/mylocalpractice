package Practice;

import java.util.Arrays;

public class TypeCasting {
/////////////////////////////// Bitter Black Coffee Sure Is For Long Days////////////////////////////////////////////////
	public static void main(String[] args) {
		int i = 5;
		long l = i; // no need to explicitly cast long since long holds more bits than int (it's done automatically/implicitly
        double d = i; // no need...
		byte b = (byte) i; // need to explicitly cast byte since int holds more bits than byte (since there is potential for data loss) 
		short s = (short) i; // need to explicitly cast 
		
		
		////////////////////Converting between Strings and character arrays////////////////////////////////////////////////////////////
		String str = "Hello";
		System.out.println(str);
		char[] strChars = str.toCharArray();
		// char[] myChars = (char[]) str; Cannot cast string to char array... must use toCharArray instance method
		System.out.println(Arrays.toString(strChars)); 
		
		char[] myChars = {'a','b','c'};
		//String str2 = (String) myChars; The opposite is also impossible... must use String.valueof(char array)
		str = String.valueOf(myChars);
		System.out.println(str);
		
		

	}

}
